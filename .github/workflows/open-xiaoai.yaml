# Modified from https://github.com/Tencent/ncnn/blob/master/.github/workflows/linux-arm-cpu-gcc.yml
name: open-xiaoai

on:
  # push:
  #   branches:
  #     - master
  #   paths:
  #     - ".github/workflows/open-xiaoai.yaml"
  #     - "cmake/**"
  #     - "sherpa-onnx/csrc/*"
  #     - "sherpa-onnx/c-api/*"
  #     - "toolchains/arm-linux-gnueabihf.toolchain.cmake"
  #   tags:
  #     - "v[0-9]+.[0-9]+.[0-9]+*"

  workflow_dispatch:

concurrency:
  group: arm-linux-gnueabihf-${{ github.ref }}
  cancel-in-progress: true

jobs:
  arm_linux_gnueabihf:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.lib_type }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        lib_type: [shared] # [static, shared]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-arm-${{ matrix.lib_type }}

      - name: cache-toolchain
        id: cache-toolchain
        uses: actions/cache@v4
        with:
          path: toolchain
          key: gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf

      - name: Download toolchain
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        shell: bash
        run: |
          wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
          mkdir $GITHUB_WORKSPACE/toolchain
          tar xvf ./gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz --strip-components 1 -C $GITHUB_WORKSPACE/toolchain

      - name: Display toolchain info
        shell: bash
        run: |
          export PATH=$GITHUB_WORKSPACE/toolchain/bin:$PATH

          arm-linux-gnueabihf-gcc --version

          gcc -x c - <<<'int main(){return 0;}' -o test && objdump -T ./test | grep GLIBC_

      - name: build arm-linux-gnueabihf
        shell: bash
        run: |
          export PATH=$GITHUB_WORKSPACE/toolchain/bin:$PATH

          export CMAKE_CXX_COMPILER_LAUNCHER=ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          cmake --version

          lib_type=${{ matrix.lib_type }}

          if [[ $lib_type == "shared" ]]; then
            export BUILD_SHARED_LIBS=ON
          else
            export BUILD_SHARED_LIBS=OFF
          fi

          ./build-open-xiaoai.sh

          ls -lh build-arm-linux-gnueabihf/bin
          ls -lh build-arm-linux-gnueabihf/lib

          file build-arm-linux-gnueabihf/bin/sherpa-onnx

      - name: Copy files
        shell: bash
        run: |
          export PATH=$GITHUB_WORKSPACE/toolchain/bin:$PATH
          arm-linux-gnueabihf-strip --version

          SHERPA_ONNX_VERSION=v$(grep "SHERPA_ONNX_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)

          dst=sherpa-onnx-${SHERPA_ONNX_VERSION}-linux-arm-gnueabihf-${{ matrix.lib_type }}
          mkdir $dst

          ls -lh build-arm-linux-gnueabihf/install/lib

          cp -a build-arm-linux-gnueabihf/install/bin $dst/
          ls -lh $dst/bin/*
          arm-linux-gnueabihf-strip $dst/bin/*
          ls -lh $dst

          lib_type=${{ matrix.lib_type }}
          if [[ $lib_type == "shared" ]]; then
            cp -a build-arm-linux-gnueabihf/install/lib $dst/
            rm -v $dst/lib/libasound.so
          fi

          tree $dst

          tar cjvf ${dst}.tar.bz2 $dst

      - uses: actions/upload-artifact@v4
        if: matrix.lib_type == 'shared'
        with:
          name: sherpa-onnx-linux-arm-gnueabihf-shared
          path: sherpa-onnx-*linux-arm-gnueabihf-shared.tar.bz2

      - uses: actions/upload-artifact@v4
        if: matrix.lib_type == 'static'
        with:
          name: sherpa-onnx-linux-arm-gnueabihf-static
          path: sherpa-onnx-*linux-arm-gnueabihf-static.tar.bz2
